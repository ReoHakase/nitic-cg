<!doctype html>
<html>
  <head>
    <script src="/lightgl.js" is:inline></script>
    <script type="text/javascript" is:inline>
      function draw() {
        const gl = GL.create();

        /**
         * 等間隔の数列を生成する
         * @param {number} start - 数列の開始値
         * @param {number} stop - 数列の終了値
         * @param {number} num - 数列の要素数
         */
        const linspace = (start, stop, num) => {
          const step = (stop - start) / (num - 1);
          return Array.from({ length: num }, (_, i) => start + step * i);
        };

        const x = linspace(-Math.PI, Math.PI, 100);
        const sinXY = x.map((x) => [x, Math.sin(x)]);
        const cosXY = x.map((x) => [x, Math.cos(x)]);
        const tanXY = x.map((x) => [x, Math.tan(x)]);

        console.info({
          sinXY,
          cosXY,
          tanXY,
        });

        gl.ondraw = function () {
          // 背景を黒でリセット
          gl.clearColor(0.0, 0.0, 0.0, 1.0);
          gl.clear(gl.COLOR_BUFFER_BIT);

          // 図形を奥方向(-z)に動かす
          gl.translate(0.0, 0.0, -7.0);

          // sinを描く
          gl.color(1.0, 1.0, 0.0, 1.0); //色はyellow
          gl.begin(gl.LINE_STRIP); // つながった線を描く
          sinXY.forEach(([x, y]) => gl.vertex(x, y, 0.0));
          gl.end();

          // cosを描く
          gl.color(0.0, 1.0, 0.0, 1.0); //色はgreen
          gl.begin(gl.LINE_STRIP); // つながった線を描く
          cosXY.forEach(([x, y]) => gl.vertex(x, y, 0.0));
          gl.end();

          // tanを描く
          gl.color(1.0, 0.0, 1.0, 1.0); //色はcyan
          gl.begin(gl.LINE_STRIP); // つながった線を描く
          tanXY.forEach(([x, y]) => {
            if (Math.abs(y) > 20) {
              gl.end();
              gl.begin(gl.LINE_STRIP);
            }
            gl.vertex(x, y, 0.0);
          });
          gl.end();
        };

        gl.fullscreen();
      }
    </script>
  </head>
  <body onload="draw();">
    <canvas id="glCanvas"></canvas>
  </body>
</html>
